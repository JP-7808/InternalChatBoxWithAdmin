@model InternalChatbox.Models.User

@{
    ViewData["Title"] = "Profile";
    var currentPath = Context.Request.Path.Value?.ToLower() ?? "";
}

<div class="outer-container position-relative min-vh-100 w-100" style="overflow: hidden;">
    <!-- Header with Back Arrow -->
    <div class="d-flex align-items-center w-100 position-relative" style="margin-top: 2rem;">
        <a href="/Settings/Settings" class="text-decoration-none text-dark d-flex align-items-center pe-3 position-absolute" style="margin-left: 2rem;">
            <i class="bi bi-arrow-left fs-4"></i>
        </a>
        <h1 class="w-100 text-center fw-bold" style="color: black !important">Your Profile</h1>
    </div>

    <!-- Main Profile Container -->
    <div class="inner-container bg-white position-absolute bottom-0 start-50 translate-middle-x w-100"
         style="height: 85% !important; box-shadow: 0 -2px 15px rgba(0,0,0,0.15); display: flex; flex-direction: column; border-top-left-radius: 1.5rem; border-top-right-radius: 1.5rem;">
        
        <!-- Profile Header -->
        <div class="profile-section position-relative text-white py-4 px-5 d-flex align-items-center justify-content-between flex-column flex-sm-row" style="background: linear-gradient(135deg, #6dcda9, #4e9d77); border-top-left-radius: 1.5rem; border-top-right-radius: 1.5rem;">
            <!-- Profile Image -->
            <div class="image me-4 mb-3 mb-sm-0" style="width: 100px; height: 100px; border-radius: 50%; overflow: hidden;">
                <img src="@(Model.ProfileImagePath ?? "~/image/Ellipse 318.png")" class="w-100 h-100 object-fit-cover" alt="Profile" onerror="this.src='/image/Ellipse 318.png'" />
            </div>

            <!-- User Info and Action Buttons -->
            <div class="profile-details d-flex flex-column text-start text-dark flex-grow-1">
                <h5 id="userName" class="fw-bold mb-1 fs-4">@Model.Name</h5>
                <p class="mb-2 text-muted">@("@" + Model.Name?.Replace(" ", "").ToLower())</p>

                <!-- Action Buttons -->
                <div id="button-container" class="d-flex gap-2 align-items-center position-relative">
                    <button onclick="window.location.href='/Chat/Index'" class="btn btn-dark rounded-circle" style="outline: none; box-shadow: none; width: 40px; height: 40px;">
                        <i class="bi bi-chat-dots text-white"></i>
                    </button>

                    <button onclick="window.location.href='/Settings/Settings'" class="btn btn-dark rounded-circle" style="outline: none; box-shadow: none; width: 40px; height: 40px;">
                        <i class="bi bi-three-dots-vertical text-white"></i>
                    </button>

                    <button id="editToggle" class="editToggle btn btn-outline-light bg-light rounded-circle position-absolute" style="outline: none; box-shadow: none; position: absolute; left: -60px; width: 40px; height: 40px;">
                        <i class="bi bi-pencil"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Profile Display + Edit Area -->
        <div class="flex-grow-1 overflow-auto px-4 pt-2 pb-3 form-container">
            <!-- View Mode -->
            <div id="viewMode" class="rounded p-3 bg-white" style="display: none;">
                <dl class="row mb-0">
                    <dt class="col-sm-4 text-muted mb-3">Name</dt>
                    <dd id="userName" class="input-values col-sm-8" id="nameField">@Model.Name</dd>

                    <dt class="col-sm-4 text-muted mb-3">Employee ID</dt>
                    <dd class="input-values col-sm-8" id="employeeIdField">@Model.EmployeeId</dd>

                    <dt class="col-sm-4 text-muted mb-3">Status</dt>
                    <dd class="input-values col-sm-8" id="designationField">@Model.Designation</dd>

                    <dt class="col-sm-4 text-muted mb-3">Address</dt>
                    <dd class="input-values col-sm-8" id="locationField">@Model.Location</dd>

                    <dt class="col-sm-4 text-muted mb-3">Email</dt>
                    <dd class="input-values col-sm-8" id="emailField">@Model.Email</dd>

                    <dt class="col-sm-4 text-muted mb-3">Profile Image</dt>
                    <dd class="input-values col-sm-8">
                        <img src="@(Model.ProfileImagePath ?? "~/image/Ellipse 318.png")" style="width: 50px; height: 50px; border-radius: 50%;" alt="Profile Image" onerror="this.src='/image/Ellipse 318.png'" />
                    </dd>
                </dl>
            </div>

            <!-- Edit Mode (Visible by default) -->
            <form asp-action="UpdateProfile" method="post" id="editForm" enctype="multipart/form-data" class="rounded p-3 bg-light" style="display: block;">
                <!-- Hidden field for User ID -->
                <input type="hidden" name="Id" value="@Model.Id" />

                <!-- Display Success or Error Messages -->
                @if (ViewBag.SuccessMessage != null)
                {
                    <div class="alert alert-success" role="alert">
                        @ViewBag.SuccessMessage
                    </div>
                }
                @if (ViewBag.ErrorMessage != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @ViewBag.ErrorMessage
                    </div>
                }

                <dl class="row mb-0">
                    <dt class="col-sm-4 text-muted pt-2">Name</dt>
                    <dd class="col-sm-8">
                        <input asp-for="Name" id="nameInput" class="form-control border-0 border-bottom" style="outline: none; box-shadow: none; border-radius: 0;" />
                    </dd>

                    <dt class="col-sm-4 text-muted pt-2">Employee ID</dt>
                    <dd class="col-sm-8">
                        <input class="form-control bg-light text-muted border-0 border-bottom" style="outline: none; box-shadow: none;" value="@Model.EmployeeId" disabled />
                    </dd>

                    <dt class="col-sm-4 text-muted pt-2">Status</dt>
                    <dd class="col-sm-8">
                        <input asp-for="Designation" id="designationInput" class="form-control border-0 border-bottom" style="outline: none; box-shadow: none; border-radius: 0;" />
                    </dd>

                    <dt class="col-sm-4 text-muted pt-2">Address</dt>
                    <dd class="col-sm-8">
                        <input asp-for="Location" id="locationInput" class="form-control border-0 border-bottom" style="outline: none; box-shadow: none; border-radius: 0;" />
                    </dd>

                    <dt class="col-sm-4 text-muted pt-2">Email Address</dt>
                    <dd class="col-sm-8">
                        <input class="form-control bg-light text-muted border-0 border-bottom" style="outline: none; box-shadow: none;" value="@Model.Email" disabled />
                    </dd>

                    <dt class="col-sm-4 text-muted pt-2">Profile Image</dt>
                    <dd class="col-sm-8">
                        <input type="file" name="profileImage" accept="image/*" class="form-control" style="outline: none; box-shadow: none;" />
                        <small class="text-muted">Upload a new profile image (JPG, PNG, max 2MB)</small>
                    </dd>

                    <dt class="col-sm-4 text-muted pt-2">Change Password</dt>
                    <dd class="col-sm-8">
                        <input type="password" name="currentPassword" class="form-control border-0 border-bottom mb-2" style="outline: none; box-shadow: none;" placeholder="Current password" />
                        <input type="password" name="newPassword" class="form-control border-0 border-bottom" style="outline: none; box-shadow: none;" placeholder="New password" />
                    </dd>
                </dl>

                <div class="d-flex justify-content-between align-items-center mt-1">
                    <button type="submit" class="btn btn-success px-4">Update Profile</button>
                    <button type="button" class="btn btn-outline-secondary" onclick="toggleEdit()">Cancel</button>
                </div>
            </form>
        </div>

        <!-- Bottom Navigation -->
        <div class="d-flex justify-content-around align-items-center border-top bg-white w-100 mt-auto pt-3 pb-3" style="height: 60px;">
            <a href="/Chat/Index" class="text-center text-decoration-none @(currentPath.Contains("/message") ? "text-success" : "text-secondary") pb-2">
                <i class="bi bi-chat-dots fs-5"></i><br />
                <small>Message</small>
            </a>
            <a href="/Contacts" class="text-center text-decoration-none @(currentPath.Contains("/contacts") ? "text-success" : "text-secondary") pb-2">
                <i class="bi bi-people fs-5"></i><br />
                <small>Contacts</small>
            </a>
            <a href="/Settings/settings" class="text-center text-decoration-none @(currentPath.Contains("/setting") ? "text-success" : "text-secondary") pb-2">
                <i class="bi bi-gear fs-5"></i><br />
                <small>Settings</small>
            </a>
        </div>
    </div>
</div>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function toggleEdit() {
            const form = document.getElementById("editForm");
            const view = document.getElementById("viewMode");
            const isFormVisible = form.style.display === "block";

            form.style.display = isFormVisible ? "none" : "block";
            view.style.display = isFormVisible ? "block" : "none";
            
            if (!isFormVisible) {
                // Update input fields with current data on the fly
                document.getElementById('nameInput').value = document.getElementById('nameField').innerText;
                document.getElementById('designationInput').value = document.getElementById('designationField').innerText;
                document.getElementById('locationInput').value = document.getElementById('locationField').innerText;
            }
        }

        document.getElementById("editToggle").addEventListener("click", toggleEdit);

        window.onload = function () {
            const userNameElement = document.getElementById("userName");
            if (userNameElement) {
                const name = userNameElement.innerText;
                userNameElement.innerText = name.charAt(0).toUpperCase() + name.slice(1);
            }
        };
    </script>
}